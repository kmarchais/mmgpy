name: Publish to PyPI

on:
  push:
    tags:
      - "v*"

jobs:
  build-and-publish:
    strategy:
      fail-fast: false
      matrix:
        include:
          # Linux builds using dockcross
          - os: ubuntu-latest
            python-version: "3.10"
            platform: linux
            container: quay.io/pypa/manylinux_2_28_x86_64
          - os: ubuntu-latest
            python-version: "3.11"
            platform: linux
            container: quay.io/pypa/manylinux_2_28_x86_64
          - os: ubuntu-latest
            python-version: "3.12"
            platform: linux
            container: quay.io/pypa/manylinux_2_28_x86_64
          - os: ubuntu-latest
            python-version: "3.13"
            platform: linux
            container: quay.io/pypa/manylinux_2_28_x86_64
          # Windows builds
          - os: windows-latest
            python-version: "3.10"
            platform: windows
          - os: windows-latest
            python-version: "3.11"
            platform: windows
          - os: windows-latest
            python-version: "3.12"
            platform: windows
          - os: windows-latest
            python-version: "3.13"
            platform: windows
          # macOS builds
          - os: macos-latest
            python-version: "3.10"
            platform: macos
          - os: macos-latest
            python-version: "3.11"
            platform: macos
          - os: macos-latest
            python-version: "3.12"
            platform: macos
          - os: macos-latest
            python-version: "3.13"
            platform: macos

    runs-on: ${{ matrix.os }}
    container: ${{ matrix.container }}

    permissions:
      id-token: write

    steps:
      - uses: actions/checkout@v4
        if: ${{ !matrix.container }}

      # Special checkout for container jobs
      - uses: actions/checkout@v4
        if: ${{ matrix.container }}
        with:
          fetch-depth: 0

      # Regular uv setup for non-container jobs
      - uses: astral-sh/setup-uv@v4
        if: ${{ !matrix.container }}
        with:
          python-version: ${{ matrix.python-version }}

      # Install uv in container
      - name: Install uv in container
        if: ${{ matrix.container }}
        shell: bash
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH
          uv python install ${{ matrix.python-version }}
          sudo apt install build-essential

      - name: Build package
        run: uv build --no-sources --python ${{ matrix.python-version }}

      - name: List built distributions
        run: ls -l dist/
        shell: bash

      - name: Publish source distribution
        if: runner.os == 'Linux' && matrix.python-version == '3.13'
        env:
          UV_PUBLISH_TOKEN: ${{ secrets.PYPI_TOKEN }}
        run: uv publish dist/*.tar.gz --verbose

      - name: Publish wheel
        env:
          UV_PUBLISH_TOKEN: ${{ secrets.PYPI_TOKEN }}
        run: uv publish dist/*.whl --verbose
