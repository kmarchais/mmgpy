name: Build and Publish to PyPI
on:
  push:
    tags:
      - "v*"
  pull_request:

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-13, macos-latest]
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel==2.22.0
      - name: Install Linux dependencies
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y python3-dev cmake build-essential
      - name: Build wheels
        env:
          CIBW_BUILD: cp310-* cp311-* cp312-* cp313-*
          CIBW_ARCHS_LINUX: x86_64
          CIBW_MANYLINUX_X86_64_IMAGE: manylinux_2_28
          CIBW_SKIP: pp* *-musllinux*
          CIBW_BEFORE_ALL_LINUX: |
            yum install -y gcc gcc-c++ make cmake python3-devel \
            && yum install -y dnf-plugins-core \
            && yum config-manager --set-enabled powertools \
            && dnf module enable python38 python39 -y \
            && dnf module install python311/devel python312/devel -y
        run: python -m cibuildwheel --output-dir wheelhouse
      - name: Store wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.os }}
          path: ./wheelhouse/*.whl
  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - name: Install build dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y python3-dev cmake build-essential
      - name: Build sdist
        run: |
          python -m pip install build
          python -m build --sdist
      - name: Store sdist
        uses: actions/upload-artifact@v4
        with:
          name: sdist
          path: dist/*.tar.gz
  upload_pypi:
    name: Upload to PyPI
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    permissions:
      id-token: write
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: wheels-*
          path: dist
          merge-multiple: true
      - name: Download sdist
        uses: actions/download-artifact@v4
        with:
          name: sdist
          path: dist
      - name: List distributions
        run: ls -R dist/
      - name: Upload to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
