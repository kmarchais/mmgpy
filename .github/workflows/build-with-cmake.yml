name: CMake Build

on:
  push:
    branches: [main]
  pull_request:
  workflow_dispatch:

env:
  VTK_VERSION_MAJOR: 9
  VTK_VERSION_MINOR: 3
  VTK_VERSION_PATCH: 1

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5

      - name: Install dependencies (Ubuntu)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y qtbase5-dev qt5-qmake libgl1-mesa-dev libglu1-mesa-dev freeglut3-dev
          sudo apt-get install -y ninja-build
          pip install pybind11

      - name: Install dependencies (macOS)
        if: runner.os == 'macOS'
        run: |
          brew install ninja
          pip install pybind11

      - name: Install dependencies (Windows)
        if: runner.os == 'Windows'
        run: |
          pip install ninja pybind11

      # VTK Installation steps
      - name: Set VTK filename
        id: vtk-file
        run: |
          if [ "$RUNNER_OS" == "Windows" ]; then
            echo "filename=vtk-Windows-x86_64.tar.gz" >> $GITHUB_OUTPUT
          elif [ "$RUNNER_OS" == "Linux" ]; then
            echo "filename=vtk-manylinux2014_x86_64.tar.gz" >> $GITHUB_OUTPUT
          elif [ "$RUNNER_OS" == "macOS" ]; then
            if [ "$(uname -m)" == "arm64" ]; then
              echo "filename=vtk-macOS-arm64.tar.gz" >> $GITHUB_OUTPUT
            else
              echo "filename=vtk-macOS-x86_64.tar.gz" >> $GITHUB_OUTPUT
            fi
          fi
        shell: bash

      - name: Download pre-built VTK
        uses: suisei-cn/actions-download-file@v1.6.0
        with:
          url: https://github.com/sanguinariojoe/vtk-builds/releases/download/VTK-${{env.VTK_VERSION_MAJOR}}.${{env.VTK_VERSION_MINOR}}.${{env.VTK_VERSION_PATCH}}-static/${{ steps.vtk-file.outputs.filename }}
          target: ${{github.workspace}}

      - name: Extract VTK
        run: |
          mkdir -p vtk
          tar -xzf ${{ steps.vtk-file.outputs.filename }} -C vtk
        shell: bash
        working-directory: ${{github.workspace}}

      - name: Set CMake path
        run: |
          if [ "$RUNNER_OS" == "Windows" ]; then
            VTK_PATH=$(cygpath -w "${PWD}/vtk/lib/cmake/vtk-${VTK_VERSION_MAJOR}.${VTK_VERSION_MINOR}" | sed 's/\\/\\\\/g')
          elif [ "$RUNNER_OS" == "Linux" ]; then
            VTK_PATH="${PWD}/vtk/lib64/cmake/vtk-${VTK_VERSION_MAJOR}.${VTK_VERSION_MINOR}"
            echo "LD_LIBRARY_PATH=${PWD}/vtk/lib64:$LD_LIBRARY_PATH" >> $GITHUB_ENV
          else
            VTK_PATH="${PWD}/vtk/lib/cmake/vtk-${VTK_VERSION_MAJOR}.${VTK_VERSION_MINOR}"
          fi
          echo "CMAKE_PREFIX_PATH=${VTK_PATH}" >> $GITHUB_ENV
        shell: bash
        working-directory: ${{github.workspace}}

      - name: Configure CMake
        run: cmake -B build -S .

      - name: Build
        run: cmake --build build --config Release
