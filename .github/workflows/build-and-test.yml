name: Build and Test

on:
  push:
    branches: [main]
  pull_request: # Any pull request
  workflow_dispatch: # Allow manual triggering of the workflow
  schedule:
    - cron: "0 0 * * *" # Run at midnight UTC every day

env:
  VTK_VERSION_MAJOR: 9
  VTK_VERSION_MINOR: 3
  VTK_VERSION_PATCH: 1

jobs:
  build-and-test:
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - windows-latest
          - macos-latest
        python-version:
          - "3.9"
          - "3.13"

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4

      # Set the correct VTK filename based on OS and architecture
      - name: Set VTK filename
        id: vtk-file
        run: |
          if [ "$RUNNER_OS" == "Windows" ]; then
            echo "filename=vtk-Windows-x86_64.tar.gz" >> $GITHUB_OUTPUT
          elif [ "$RUNNER_OS" == "Linux" ]; then
            echo "filename=vtk-manylinux2014_x86_64.tar.gz" >> $GITHUB_OUTPUT
          elif [ "$RUNNER_OS" == "macOS" ]; then
            if [ "$(uname -m)" == "arm64" ]; then
              echo "filename=vtk-macOS-arm64.tar.gz" >> $GITHUB_OUTPUT
            else
              echo "filename=vtk-macOS-x86_64.tar.gz" >> $GITHUB_OUTPUT
            fi
          fi
        shell: bash

      # Download and extract pre-built VTK for all platforms
      - name: Download pre-built VTK
        uses: suisei-cn/actions-download-file@v1.6.0
        with:
          url: https://github.com/sanguinariojoe/vtk-builds/releases/download/VTK-${{env.VTK_VERSION_MAJOR}}.${{env.VTK_VERSION_MINOR}}.${{env.VTK_VERSION_PATCH}}-static/${{ steps.vtk-file.outputs.filename }}
          target: ${{github.workspace}}

      - name: Extract VTK
        run: |
          mkdir -p vtk
          tar -xzf ${{ steps.vtk-file.outputs.filename }} -C vtk
        shell: bash
        working-directory: ${{github.workspace}}

      # Set CMake path for each OS
      - name: Set CMake path (Windows)
        if: runner.os == 'Windows'
        run: |
          VTK_PATH=$(cygpath -w "${PWD}/vtk/lib/cmake/vtk-${{env.VTK_VERSION_MAJOR}}.${{env.VTK_VERSION_MINOR}}" | sed 's/\\/\\\\/g')
          echo "CMAKE_PREFIX_PATH=${VTK_PATH}" >> $GITHUB_ENV
        shell: bash
        working-directory: ${{github.workspace}}

      - name: Set CMake path (Unix)
        if: runner.os != 'Windows'
        run: |
          if [ "$RUNNER_OS" == "Linux" ]; then
            # Linux uses lib64 directory
            echo "CMAKE_PREFIX_PATH=${PWD}/vtk/lib64/cmake/vtk-${{env.VTK_VERSION_MAJOR}}.${{env.VTK_VERSION_MINOR}}" >> $GITHUB_ENV
            echo "LD_LIBRARY_PATH=${PWD}/vtk/lib64:$LD_LIBRARY_PATH" >> $GITHUB_ENV
          else
            # macOS uses lib directory
            echo "CMAKE_PREFIX_PATH=${PWD}/vtk/lib/cmake/vtk-${{env.VTK_VERSION_MAJOR}}.${{env.VTK_VERSION_MINOR}}" >> $GITHUB_ENV
          fi
        shell: bash
        working-directory: ${{github.workspace}}

      - uses: astral-sh/setup-uv@v4
        with:
          python-version: ${{ matrix.python-version }}

      - run: uv sync -v
      - run: uv run pytest
