name: Build and Test

on:
  push:
    branches: [main]
  pull_request: # Any pull request
  workflow_dispatch: # Allow manual triggering of the workflow
  schedule:
    - cron: "0 0 * * *" # Run at midnight UTC every day

env:
  VTK_VERSION_MAJOR: 9
  VTK_VERSION_MINOR: 3
  VTK_VERSION_PATCH: 1

jobs:
  build-and-test:
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - windows-latest
          - macos-latest
        python-version:
          - "3.9"
          - "3.13"

    runs-on: ${{ matrix.os }}

    continue-on-error: true

    steps:
      - uses: actions/checkout@v4

      # Install VTK 9.3 using apt for Ubuntu
      - name: Install VTK (Ubuntu)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y libvtk9-dev

      # Install VTK 9.3 using homebrew for macOS
      - name: Install VTK (macOS)
        if: runner.os == 'macOS'
        run: |
          brew install vtk

      # Download and extract pre-built VTK 9.3.1 for Windows
      - name: Download pre-built VTK (Windows)
        if: runner.os == 'Windows'
        uses: suisei-cn/actions-download-file@v1.6.0
        with:
          url: https://github.com/sanguinariojoe/vtk-builds/releases/download/VTK-${{env.VTK_VERSION_MAJOR}}.${{env.VTK_VERSION_MINOR}}.${{env.VTK_VERSION_PATCH}}-static/vtk-Windows-x86_64.tar.gz
          target: ${{github.workspace}}

      - name: Extract VTK (Windows)
        if: runner.os == 'Windows'
        run: |
          mkdir -p vtk
          tar -xzf vtk-Windows-x86_64.tar.gz -C vtk
          # Convert Windows path to CMake format and escape backslashes
          VTK_PATH=$(cygpath -w "${PWD}/vtk/lib/cmake/vtk-${{env.VTK_VERSION_MAJOR}}.${{env.VTK_VERSION_MINOR}}" | sed 's/\\/\\\\/g')
          # echo "VTK_DIR=${VTK_PATH}" >> $GITHUB_ENV
          # Also set CMAKE_PREFIX_PATH
          echo "CMAKE_PREFIX_PATH=${VTK_PATH}" >> $GITHUB_ENV
        shell: bash
        working-directory: ${{github.workspace}}

      - uses: astral-sh/setup-uv@v4
        with:
          python-version: ${{ matrix.python-version }}

      - run: uv sync -v
      - run: uv run pytest
